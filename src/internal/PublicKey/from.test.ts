import { Bytes, PublicKey } from 'ox'
import { expect, test } from 'vitest'

test('uncompressed', () => {
  const publicKey = PublicKey.from({
    prefix: 4,
    x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
  })
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 4,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
      "y": 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
    }
  `)
})

test('uncompressed, serialized hex', () => {
  const publicKey = PublicKey.from(
    '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',
  )
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 4,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
      "y": 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
    }
  `)
})

test('uncompressed, serialized bytes', () => {
  const publicKey = PublicKey.from(
    Bytes.fromHex(
      '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',
    ),
  )
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 4,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
      "y": 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
    }
  `)
})

test('uncompressed, no prefix', () => {
  const publicKey = PublicKey.from({
    x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
  })
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 4,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
      "y": 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
    }
  `)
})

test('uncompressed, no prefix, serialized hex', () => {
  const publicKey = PublicKey.from(
    '0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',
  )
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 4,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
      "y": 24099691209996290925259367678540227198235484593389470330605641003500238088869n,
    }
  `)
})

test('compressed', () => {
  const publicKey = PublicKey.from({
    prefix: 3,
    x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
  })
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 3,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    }
  `)
})

test('compressed', () => {
  const publicKey = PublicKey.from({
    prefix: 2,
    x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
  })
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 2,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    }
  `)
})

test('compressed, serialized hex', () => {
  const publicKey = PublicKey.from(
    '0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75',
  )
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 3,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    }
  `)
})

test('compressed, serialized bytes', () => {
  const publicKey = PublicKey.from(
    Bytes.fromHex(
      '0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75',
    ),
  )
  expect(publicKey).toMatchInlineSnapshot(`
    {
      "prefix": 3,
      "x": 59295962801117472859457908919941473389380284132224861839820747729565200149877n,
    }
  `)
})
